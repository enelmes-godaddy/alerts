"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "asOptions", {
  enumerable: true,
  get: function () {
    return _options.default;
  }
});
exports.space = exports.default = void 0;
var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _classes = _interopRequireDefault(require("./classes"));
var _options = _interopRequireDefault(require("./options"));
const _excluded = ["as", "className", "children", "inline", "block", "gap"];
/**
 * Creates a function which represents a dynamic React component
 *
 * @param {String} TagName - The tag name of the element to use for space
 * @returns {Function} - A function to create a component
 */
function create(TagName) {
  /**
   * Creates a React component using the given tag name
   *
   * @param {Object} props - A props configuration object
   * @param {String} props.as - Determines the density of the component and its children
   * @param {String} [props.className] - A class name to include
   * @param {Node} [props.children] - Children
   * @param {Boolean} [props.inline] - Include space in the horizontal direction
   * @param {Boolean} [props.block] - Include space in the vertical direction
   * @param {Boolean} [props.gap] - Include space in between child elements
   * @param {Object} ref - Element reference
   * @returns {React.Component} - A functional React component
   */
  const Space = /*#__PURE__*/_react.default.forwardRef(function Space(props, ref) {
    const _ref = props || {},
      {
        as,
        className,
        children,
        inline,
        block,
        gap
      } = _ref,
      rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
    return /*#__PURE__*/_react.default.createElement(TagName, (0, _extends2.default)({
      className: (0, _classes.default)({
        as,
        className,
        inline,
        block,
        gap
      }),
      ref: ref
    }, rest), children);
  });

  /**
   *
   * @enum {Object} expected types of properties.
   * @public
   */
  Space.propTypes = {
    /** Determines the density of the component and its children */
    as: _propTypes.default.oneOf(Object.values(_options.default)).isRequired,
    /** Children for the component */
    children: _propTypes.default.node,
    /** Classes to apply to component */
    className: _propTypes.default.string,
    /** Include space in the horizontal direction */
    inline: _propTypes.default.bool,
    /** Include space in the vertical direction */
    block: _propTypes.default.bool,
    /** Include space in between child elements */
    gap: _propTypes.default.bool
  };
  return Space;
}
const space = new Proxy(function () {}, {
  get: function get(target, prop) {
    // Deliberately not using hasOwnProperty to catch things like __proto__
    if (!String(prop).startsWith('_') && typeof target[prop] === 'undefined') {
      // Cache access by creating a key with value
      target[prop] = create(prop);
    }
    // Always return thing at that key, either undefined or thing set
    return Reflect.get(...arguments);
  }
});
exports.space = space;
var _default = space;
exports.default = _default;