.ux-space.ux-space--as-lockup {
  --uxSpace--padding-size: calc(         var(--ux-19d6xg3, 2) *          var(--ux-1sbfig8, .25rem) *          var(--uxSpace--padding-adjustment, 1)       );
  --uxSpace--gap-size: calc(         var(--ux-1fyzlxw, 1) *         var(--ux-1sbfig8, .25rem) *         var(--uxSpace--gap-adjustment, 1)       );
}

.ux-space.ux-space--as-block {
  --uxSpace--padding-size: calc(         var(--ux-1ftkyno, 5) *          var(--ux-1sbfig8, .25rem) *          var(--uxSpace--padding-adjustment, 1)       );
  --uxSpace--gap-size: calc(         var(--ux-zd0ser, 3) *         var(--ux-1sbfig8, .25rem) *         var(--uxSpace--gap-adjustment, 1)       );
}

.ux-space.ux-space--as-module {
  --uxSpace--padding-size: calc(         var(--ux-1o7ef1j, 8) *          var(--ux-1sbfig8, .25rem) *          var(--uxSpace--padding-adjustment, 1)       );
  --uxSpace--gap-size: calc(         var(--ux-dlydsw, 3) *         var(--ux-1sbfig8, .25rem) *         var(--uxSpace--gap-adjustment, 1)       );
}

.ux-space.ux-space--inline:empty {         /** Container has no children, apply as spacer-gif */
  display: inline-flex;
  inline-size: var(--uxSpace--padding-size);
}

.ux-space.ux-space--inline:not(:empty) {         /** Container has children, apply as padding */
  padding-inline: var(--uxSpace--padding-size);
}

.ux-space.ux-space--block:empty {         /** Container has no children, apply as spacer-gif */
  display: inline-flex;
  block-size: var(--uxSpace--padding-size);
}

.ux-space.ux-space--block:not(:empty) {         /** Container has children, apply as padding */
  padding-block: var(--uxSpace--padding-size);
}

.ux-space.ux-space--gap {
  gap: var(--uxSpace--gap-size);
}

@media (max-width: 500px) {
  .ux-space.ux-space--as-module {
    --uxSpace--padding-adjustment: .5;
  }
  .ux-space.ux-space--as-block {
    --uxSpace--padding-adjustment: .75;
    --uxSpace--gap-adjustment: .5;
  }
}

