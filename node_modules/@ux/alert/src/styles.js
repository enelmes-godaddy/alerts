import { css } from 'linaria';
import Intents from '@ux/intents';
import feedbackExpressions from '@ux/intents/lib/feedback-expressions';

import '@ux/dialog/styles';
import '@ux/text/styles';
import '@ux/icon/information/styles';
import '@ux/icon/checkmark/styles';
import '@ux/icon/comment/styles';
import '@ux/icon/alert/styles';
import '@ux/icon/help/styles';
import '@ux/icon/star/styles';


const intents = new Intents();

function createAlertVariant(type) {
  return `
    &.ux-alert--${type.toLowerCase()} {
      background-color: ${intents.ux[`feedback${type}`].feedbackColor};
      color: ${intents.ux[`feedback${type}`].onFeedbackColor};
      border-color: ${intents.ux[`feedback${type}`].feedbackColor};
    }
  `;
}

export default css`
  :global() {
    .ux-alert {
      color: ${intents.ux.box.foregroundColor};
      background-color: ${intents.ux.box.backgroundColor};
      border-color: ${intents.ux.box.borderColor};
      border-width: ${intents.ux.box.borderWidth};
      border-radius: ${intents.ux.box.borderRadius};

      & a[href] {
        color: inherit;
      }

      & svg {
        color: currentColor;
        fill: currentColor;
      }

      ${Object.values(feedbackExpressions || {}).map(createAlertVariant).filter(Boolean).join('\n')}
    }
  }
`;
