@import '~@ux/intents/lib/index';
@import './scss/theme.scss';

$base-unit: 8px;
$spacing-xs: $base-unit / 2; // 4px
$spacing-s: $base-unit; // 8px
$spacing-m: $base-unit * 2; // 16px
$spacing-l: $base-unit * 3; // 24px
$spacing-xl: $base-unit * 5; // 40px

$color: #111;
$color--passive: #767676;

$colors--high-contrast: (
  "critical": $ux-feedbackHighContrastCritical-feedbackColor,
  "highlight": $ux-feedbackHighContrastHighlight-feedbackColor,
  "info": $ux-feedbackHighContrastNeutral-feedbackColor,
  "internal": $ux-feedbackHighContrastPassive-feedbackColor,
  "premium": $ux-feedbackHighContrastPremium-feedbackColor,
  "success": $ux-feedbackHighContrastSuccess-feedbackColor,
  "warning": $ux-feedbackHighContrastWarning-feedbackColor
);

$border-radius-form: 6px;

$alert-border-radius: 16px;
$alert-padding: $spacing-m;

$dismiss-button-border-radius: 6px; // from Figma minimal icon button
$dismiss-button-size: 20px;

$icon-size: 24px;

$font-smaller: 0.9rem;

/****************
 *** SETUP ******
 ***************/

.App {
  display: grid;
  grid-template-columns: 400px auto;
  height: fit-content;
  min-height: 100%;
  overflow-x: hidden;
  overflow-y: scroll;

  .section {
    display: flex;
    flex-direction: column;
    gap: $spacing-l;
    padding: $spacing-xl;
  }

  .settings {
    background-color: $ux-boxLowContrast-backgroundColor;

    &--actions {
      display: flex;
      flex-wrap: wrap;
      gap: $spacing-m;
    }

    &--block {
      input,
      textarea {
        border: 1px solid $ux-box-borderColor;
        border-radius: $border-radius-form;
        padding: $spacing-s;
        width: 100%;
      }

      input[type="radio"],
      input[type="checkbox"] {
        margin-right: $spacing-s;
        width: auto !important;
      }

      input:disabled {
        color: $color--passive;
      }
    }

    .label {
      display: block;
      font-size: $font-smaller;
      font-weight: bold;
    }

    .form-wrapper {
      align-items: center;
      display: flex;
    }
  }

  .examples {
    background-color: $ux-box-backgroundColor;
    overflow-x: scroll;
  }

  .mb-s {
    margin-bottom: $spacing-s;
  }

  .ml-m {
    margin-left: $spacing-m;
  }

  .ml-s {
    margin-left: $spacing-s;
  }

  .mt-s {
    margin-top: $spacing-s;
  }
}

/*********************
 *** NEW ALERT *******
 ********************/

.NewAlert {
  border-radius: $alert-border-radius;
  display: flex;
  flex-flow: row nowrap;
  gap: $spacing-m;
  min-width: min-content;
  width: 100%;
  padding: $alert-padding;
  position: relative;

  // used for the prototype
  overflow: hidden;
  resize: horizontal;

  @each $color, $value in $colors--high-contrast {
    &.#{$color} {
      border: 1px solid $value;
      border-left: $alert-border-radius solid $value;

      .Alert--icon svg path {
        fill: $value;
      }
    }
  }

  .Alert--content {
    align-items: baseline;
    display: flex;
    flex: 1 1 0;
    flex-flow: row wrap;
    gap: $spacing-s;
    width: 100%;
    min-width: 0;
  }

  .Alert--icon {
    align-items: center;
    justify-content: center;
    display: flex;
    flex: 0 0 auto;
    overflow: hidden;
    
    svg {
      height: $icon-size;
      width: $icon-size;
      min-height: $icon-size;
      min-width: $icon-size;
    }

    &:after,
    &:before {
      content: "â€‹";
      visibility: hidden;
    }
  }

  .Alert--text-and-cta-wrapper {
    align-items: center;
    display: flex;
    flex: 1 1 90%;
    flex-direction: row;
    flex-wrap: wrap;
    gap: $spacing-m;

    .Alert--text {
      display: flex;
      flex: 1 1 70%;
      flex-direction: column;
      gap: $spacing-s;
    }
  }

  .Alert--cta {
    display: flex;
    flex: 0 1 auto;
    max-width: fit-content;

    
    &.wrap-cta-label {
      .ux-button {
        flex-shrink: 1;
        min-width: unset;
        white-space: wrap;
      }
    }
  }

  .Alert--dismiss {
    flex: 0 0 auto;
    padding-top: 2px; // to align with alert icon
  }
}